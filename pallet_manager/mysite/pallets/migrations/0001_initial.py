# Generated by Django 4.2.25 on 2025-10-21 00:50

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Pallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(error_messages={'blank': 'El código es obligatorio.', 'unique': 'Ya existe un pallet con este código.'}, help_text='Identificador único del pallet (etiqueta/QR).', max_length=50, unique=True, verbose_name='Código')),
                ('material', models.CharField(choices=[('MADERA', 'Madera'), ('PLASTICO', 'Plástico'), ('METAL', 'Metal')], error_messages={'blank': 'El material es obligatorio.'}, max_length=10)),
                ('calidad', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], default='A', error_messages={'blank': 'La calidad es obligatoria.'}, max_length=1)),
                ('norma_nimf15', models.BooleanField(default=False, help_text='Tratamiento fitosanitario exigido para exportación.', verbose_name='Cumple NIMF-15')),
                ('peso_max_kg', models.DecimalField(decimal_places=2, error_messages={'invalid': 'Ingrese un peso válido.'}, max_digits=7, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Peso máx. admitido (kg)')),
                ('largo_mm', models.PositiveIntegerField(error_messages={'invalid': 'El largo debe ser un número positivo.'}, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Largo (mm)')),
                ('ancho_mm', models.PositiveIntegerField(error_messages={'invalid': 'El ancho debe ser un número positivo.'}, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Ancho (mm)')),
                ('alto_mm', models.PositiveIntegerField(error_messages={'invalid': 'El alto debe ser un número positivo.'}, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Alto (mm)')),
                ('vida_util_meses', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Vida útil (meses)')),
                ('estado', models.CharField(choices=[('DISPONIBLE', 'Disponible'), ('EN_USO', 'En uso'), ('EN_REPARACION', 'En reparación'), ('BAJA', 'Baja')], default='DISPONIBLE', error_messages={'blank': 'El estado es obligatorio.'}, max_length=15)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_alta', models.DateField(auto_now_add=True)),
                ('fecha_baja', models.DateField(blank=True, null=True)),
                ('ultima_inspeccion', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pallet',
                'verbose_name_plural': 'Pallets',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['codigo'], name='pallets_pal_codigo_8601f5_idx'), models.Index(fields=['estado'], name='pallets_pal_estado_dc0b8c_idx')],
            },
        ),
    ]
